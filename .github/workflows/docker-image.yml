name: image
on:
  workflow_dispatch:

jobs:
  push_to_Docker_Hub_amd64:
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-amd64
            platforms: linux/amd64
            cache-from: type=gha,scope=main-amd64
            cache-to: type=gha,mode=max,scope=main-amd64
            build-args: |
              BUILDKIT_INLINE_CACHE=1
  push_to_Docker_Hub_arm64:
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v3
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-arm64
            platforms: linux/arm64
            cache-from: type=gha,scope=main-arm64
            cache-to: type=gha,mode=max,scope=main-arm64
            build-args: |
              BUILDKIT_INLINE_CACHE=1
  push_to_Docker_Hub_arm_v7:
      runs-on: ubuntu-latest
      steps:
        - name: Set Swap Space
          uses: pierotofy/set-swap-space@v1.0
          with:
            swap-size-gb: 10
        - run: |
            # Workaround for https://github.com/rust-lang/cargo/issues/8719
            sudo mkdir -p /var/lib/docker
            sudo mount -t tmpfs -o size=10G none /var/lib/docker
            sudo systemctl restart docker
        - name: checkout repo
          uses: actions/checkout@v3
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-armv7
            platforms: linux/arm/v7
            cache-from: type=gha,scope=main-armv7
            cache-to: type=gha,mode=max,scope=main-armv7
            build-args: |
              BUILDKIT_INLINE_CACHE=1
  merge_tags:
      needs: [push_to_Docker_Hub_arm64, push_to_Docker_Hub_arm_v7, push_to_Docker_Hub_amd64]
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v3
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: merge into version
          run: docker buildx imagetools create -t ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-armv7 ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-arm64 ${{ secrets.DOCKERHUB_USERNAME }}/docker-stream-recoder:latest-amd64
